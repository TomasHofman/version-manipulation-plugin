plugins {
    // including this plugin directly instead of by an init script, which allows to use the freshly build version
    id 'version-manipulation'

    id 'java'
    id 'osgi'
    id 'maven-publish'
    id 'maven'
}

apply from: './libraries.gradle'

group 'org.jboss.set.gradle'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

dependencies {
    compile group: 'org.jboss.logging', name: 'jboss-logging', version: jbossLoggingVersion
}

repositories {
    // TODO: prepare custom repo in a directory
    mavenLocal()
    mavenCentral()
    maven {
        name 'redhat-ga'
        url 'https://maven.repository.redhat.com/ga/'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

jar {
    manifest = osgiManifest {
        classesDir = sourceSets.main.output.classesDirs[0]
        classpath = configurations.runtime
        instruction 'Implementation-Version', version
    }

    // include pom.xml generated by maven-publish plugin in the jar
    into ("META-INF/maven/") {
        from { generatePomFileForMavenPublication }
        rename ".*", "pom.xml"
    }
}

gradle.buildFinished { buildResult ->
    if (gradle.taskGraph.allTasks.contains("build")) {
        // verify that publishing repository was created
        println "Number of publishing repositories: " + publishing.repositories.size()
        publishing.repositories.each { println it.name + ": " + it.url }
        assert publishing.repositories.size() == 1
    }
}
